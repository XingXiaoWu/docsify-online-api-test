{"version":3,"file":"docsify-online-api-test.min.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import styles from './styles.css';\n\nfunction docsifyOnlineApiTest(hook, vm) {\n\n    let docsifyOnlineApiTestUrl = \"\";\n\n    hook.doneEach(function(){\n        const targetElms = Array.apply(null, document.querySelectorAll('pre[data-lang]'));\n        const i18n = {\n            // 按钮文字\n            buttonText: 'Go to online api test website',\n            // 按钮样式\n            buttonStyle: '',\n            // 文字样式\n            spanStyle:'',\n            // 跳转地址\n            url: 'https://hoppscotch.io/cn',\n        };\n\n        // Update i18n strings based on options and location.href\n        if (vm.config.onlineApiTest) {\n            Object.keys(i18n).forEach(key => {\n                const textValue = vm.config.onlineApiTest[key];\n\n               \n                if (typeof textValue === 'string') {\n                    i18n[key] = textValue;\n                }else if (typeof textValue === 'object') {\n                    Object.keys(textValue).some(match => {\n                        const isMatch = location.href.indexOf(match) > -1;\n\n                        i18n[key] = isMatch ? textValue[match] : i18n[key];\n\n                        return isMatch;\n                    });\n                }\n            })\n        }\n        docsifyOnlineApiTestUrl = i18n.url;\n\n        const template = [\n            `<button class=\"docsify-online-api-test-button\" style=\"${i18n.buttonStyle}\">`,\n            `<span class=\"label\" style=\"${i18n.spanStyle}\">${i18n.buttonText}</span>`,\n            '</button>'\n        ].join('');\n\n        targetElms.forEach(elm => {\n            elm.insertAdjacentHTML('beforeend', template);\n        });\n    })\n\n    hook.mounted(function() {\n        const listenerHost = document.querySelector('.content');\n        listenerHost.addEventListener('click', event => {\n            const isCopyCodeButton = event.target.classList.contains('docsify-online-api-test-button');\n            // 判断按钮是否存在\n            if (isCopyCodeButton) {\n                // 点击\n                window.open(docsifyOnlineApiTestUrl) \n            }\n        })\n    })\n}\n\n\nwindow.DocsifyOnlineApiTestPlugin = {\n    init: function() {\n        return function(hook, vm) {\n            hook.ready(function() {\n                console.warn('[Deprecation] Manually initializing docsify-online-api-test using window.DocsifyOnlineApiTestPlugin.init() is no longer necessary.');\n            });\n        };\n    }\n};\n\nwindow.$docsify = window.$docsify || {};\nwindow.$docsify.plugins = [docsifyOnlineApiTest].concat(window.$docsify.plugins || []);"],"names":["css","ref","head","insertAt","document","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","window","DocsifyOnlineApiTestPlugin","init","hook","vm","ready","console","warn","$docsify","plugins","docsifyOnlineApiTestUrl","doneEach","targetElms","Array","apply","querySelectorAll","i18n","buttonText","buttonStyle","spanStyle","url","config","onlineApiTest","Object","keys","forEach","key","textValue","_typeof","some","match","isMatch","location","href","indexOf","template","join","elm","insertAdjacentHTML","mounted","querySelector","addEventListener","event","target","classList","contains","open","concat"],"mappings":";;;;;;;+PAAA,SAAqBA,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAIIC,EAJAC,EAAWF,EAAIE,SAEdH,GAA2B,oBAAbI,WAEfF,EAAOE,SAASF,MAAQE,SAASC,qBAAqB,QAAQ,IAC9DC,EAAQF,SAASG,cAAc,UAC7BC,KAAO,WAEI,QAAbL,GACED,EAAKO,WACPP,EAAKQ,aAAaJ,EAAOJ,EAAKO,YAKhCP,EAAKS,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYP,SAASU,eAAed,shBC0C9Ce,OAAOC,2BAA6B,CAChCC,KAAM,kBACK,SAASC,EAAMC,GAClBD,EAAKE,MAAM,WACPC,QAAQC,KAAK,2IAM7BP,OAAOQ,SAAWR,OAAOQ,UAAY,GACrCR,OAAOQ,SAASC,QAAU,CA1E1B,SAA8BN,EAAMC,OAE5BM,EAA0B,GAE9BP,EAAKQ,SAAS,eACJC,EAAaC,MAAMC,MAAM,KAAMzB,SAAS0B,iBAAiB,mBACzDC,EAAO,CAETC,WAAY,gCAEZC,YAAa,GAEbC,UAAU,GAEVC,IAAK,4BAILhB,EAAGiB,OAAOC,eACVC,OAAOC,KAAKR,GAAMS,QAAQ,SAAAC,OAChBC,EAAYvB,EAAGiB,OAAOC,cAAcI,GAGjB,iBAAdC,EACPX,EAAKU,GAAOC,EACe,WAArBC,EAAOD,IACbJ,OAAOC,KAAKG,GAAWE,KAAK,SAAAC,OAClBC,GAA0C,EAAhCC,SAASC,KAAKC,QAAQJ,UAEtCd,EAAKU,GAAOK,EAAUJ,EAAUG,GAASd,EAAKU,GAEvCK,MAKvBrB,EAA0BM,EAAKI,QAEzBe,EAAW,iEAC4CnB,EAAKE,uDAChCF,EAAKG,uBAAcH,EAAKC,sBACtD,aACFmB,KAAK,IAEPxB,EAAWa,QAAQ,SAAAY,GACfA,EAAIC,mBAAmB,YAAaH,OAI5ChC,EAAKoC,QAAQ,WACYlD,SAASmD,cAAc,YAC/BC,iBAAiB,QAAS,SAAAC,GACVA,EAAMC,OAAOC,UAAUC,SAAS,mCAIrD7C,OAAO8C,KAAKpC,SAkBqBqC,OAAO/C,OAAOQ,SAASC,SAAW"}